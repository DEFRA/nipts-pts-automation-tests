// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by Reqnroll (https://www.reqnroll.net/).
//      Reqnroll Version:2.0.0.0
//      Reqnroll Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
using Reqnroll;
namespace nipts_pts_automation_tests.Features
{
    
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Reqnroll", "2.0.0.0")]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("PostcodeAddress")]
    [NUnit.Framework.FixtureLifeCycleAttribute(NUnit.Framework.LifeCycle.InstancePerTestCase)]
    [NUnit.Framework.CategoryAttribute("Regression")]
    public partial class PostcodeAddressFeature
    {
        
        private global::Reqnroll.ITestRunner testRunner;
        
        private static string[] featureTags = new string[] {
                "Regression"};
        
        private static global::Reqnroll.FeatureInfo featureInfo = new global::Reqnroll.FeatureInfo(new global::System.Globalization.CultureInfo("en-US"), "Features", "PostcodeAddress", "Update and verify Postcode Address on Pets application Portal", global::Reqnroll.ProgrammingLanguage.CSharp, featureTags);
        
#line 1 "PostcodeAddress.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public static async global::System.Threading.Tasks.Task FeatureSetupAsync()
        {
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public static async global::System.Threading.Tasks.Task FeatureTearDownAsync()
        {
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public async global::System.Threading.Tasks.Task TestInitializeAsync()
        {
            testRunner = global::Reqnroll.TestRunnerManager.GetTestRunnerForAssembly(featureHint: featureInfo);
            try
            {
                if (((testRunner.FeatureContext != null) 
                            && (testRunner.FeatureContext.FeatureInfo.Equals(featureInfo) == false)))
                {
                    await testRunner.OnFeatureEndAsync();
                }
            }
            finally
            {
                if (((testRunner.FeatureContext != null) 
                            && testRunner.FeatureContext.BeforeFeatureHookFailed))
                {
                    throw new global::Reqnroll.ReqnrollException("Scenario skipped because of previous before feature hook error");
                }
                if ((testRunner.FeatureContext == null))
                {
                    await testRunner.OnFeatureStartAsync(featureInfo);
                }
            }
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public async global::System.Threading.Tasks.Task TestTearDownAsync()
        {
            if ((testRunner == null))
            {
                return;
            }
            try
            {
                await testRunner.OnScenarioEndAsync();
            }
            finally
            {
                global::Reqnroll.TestRunnerManager.ReleaseTestRunner(testRunner);
                testRunner = null;
            }
        }
        
        public void ScenarioInitialize(global::Reqnroll.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public async global::System.Threading.Tasks.Task ScenarioStartAsync()
        {
            await testRunner.OnScenarioStartAsync();
        }
        
        public async global::System.Threading.Tasks.Task ScenarioCleanupAsync()
        {
            await testRunner.CollectScenarioErrorsAsync();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Enter postcode and select address on Pets")]
        [NUnit.Framework.TestCaseAttribute("test", "Dogfennau teithio gydol oes i anifeiliaid anwes", "manylion chi", "ch enw llawn?", "ch cod post", "ch cyfeiriad?", "ch rhif ff", "TestFullName", "SE1 7PB", null)]
        public async global::System.Threading.Tasks.Task EnterPostcodeAndSelectAddressOnPets(string logininfo, string nextPage, string nextPage1, string nextPage2, string nextPage3, string nextPage4, string nextPage5, string fullname, string postcode, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("logininfo", logininfo);
            argumentsOfScenario.Add("nextPage", nextPage);
            argumentsOfScenario.Add("nextPage1", nextPage1);
            argumentsOfScenario.Add("nextPage2", nextPage2);
            argumentsOfScenario.Add("nextPage3", nextPage3);
            argumentsOfScenario.Add("nextPage4", nextPage4);
            argumentsOfScenario.Add("nextPage5", nextPage5);
            argumentsOfScenario.Add("fullname", fullname);
            argumentsOfScenario.Add("postcode", postcode);
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Enter postcode and select address on Pets", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 7
 await testRunner.GivenAsync("that I navigate to the Pets application portal", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 8
 await testRunner.WhenAsync(string.Format("sign in with valid credentials with logininfo \'{0}\'", logininfo), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 9
 await testRunner.AndAsync("click on Welsh language", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 10
 await testRunner.ThenAsync(string.Format("verify next page \'{0}\' is loaded", nextPage), ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 11
 await testRunner.WhenAsync("click on Apply for a document", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 12
 await testRunner.ThenAsync(string.Format("verify next page \'{0}\' is loaded", nextPage1), ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 13
 await testRunner.WhenAsync("select \'Nac ydyn\' on Personal Details page", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 14
 await testRunner.AndAsync("click on continue", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 15
 await testRunner.ThenAsync(string.Format("verify next page \'{0}\' is loaded", nextPage2), ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 16
 await testRunner.WhenAsync(string.Format("enter your full name \'{0}\'", fullname), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 17
 await testRunner.AndAsync("click on continue", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 18
 await testRunner.ThenAsync(string.Format("verify next page \'{0}\' is loaded", nextPage3), ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 19
 await testRunner.WhenAsync(string.Format("enter your postcode \'{0}\'", postcode), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 20
 await testRunner.ThenAsync("verify total address found on select address page", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 21
 await testRunner.WhenAsync("select address", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 22
 await testRunner.ThenAsync(string.Format("verify next page \'{0}\' is loaded", nextPage4), ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 23
 await testRunner.AndAsync("click on continue", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 24
 await testRunner.ThenAsync(string.Format("verify next page \'{0}\' is loaded", nextPage5), ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify error message for invalid postcode")]
        [NUnit.Framework.TestCaseAttribute("test", "Dogfennau teithio gydol oes i anifeiliaid anwes", "TestFullName", "", "Rhowch eich cod post", null)]
        [NUnit.Framework.TestCaseAttribute("test", "Dogfennau teithio gydol oes i anifeiliaid anwes", "TestFullName", "SE10 1EE", "Rhowch god post yng Nghymru", null)]
        [NUnit.Framework.TestCaseAttribute("test", "Dogfennau teithio gydol oes i anifeiliaid anwes", "TestFullName", "SE1 7PBABCDEFGHIJKLMNOP", "Rhowch god post llawn yn y fformat cywir", null)]
        public async global::System.Threading.Tasks.Task VerifyErrorMessageForInvalidPostcode(string logininfo, string nextPage, string fullname, string postcode, string errorMessage, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("logininfo", logininfo);
            argumentsOfScenario.Add("nextPage", nextPage);
            argumentsOfScenario.Add("fullname", fullname);
            argumentsOfScenario.Add("postcode", postcode);
            argumentsOfScenario.Add("errorMessage", errorMessage);
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Verify error message for invalid postcode", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 30
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 31
 await testRunner.GivenAsync("that I navigate to the Pets application portal", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 32
 await testRunner.WhenAsync(string.Format("sign in with valid credentials with logininfo \'{0}\'", logininfo), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 33
 await testRunner.AndAsync("click on Welsh language", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 34
 await testRunner.ThenAsync(string.Format("verify next page \'{0}\' is loaded", nextPage), ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 35
 await testRunner.WhenAsync("click on Apply for a document", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 36
 await testRunner.AndAsync("select \'Nac ydyn\' on Personal Details page", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 37
 await testRunner.WhenAsync("click on continue", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 38
 await testRunner.WhenAsync(string.Format("enter your full name \'{0}\'", fullname), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 39
 await testRunner.AndAsync("click on continue", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 40
 await testRunner.WhenAsync(string.Format("enter your postcode \'{0}\'", postcode), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 41
 await testRunner.ThenAsync(string.Format("verify error message \'{0}\' on Pets", errorMessage), ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Change postcode on what is your address page")]
        [NUnit.Framework.TestCaseAttribute("test", "Dogfennau teithio gydol oes i anifeiliaid anwes", "TestFullName", "SE10 0BP", "ch cyfeiriad", "ch cod post", null)]
        public async global::System.Threading.Tasks.Task ChangePostcodeOnWhatIsYourAddressPage(string logininfo, string nextPage, string fullname, string postcode, string nextPage1, string nextPage2, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("logininfo", logininfo);
            argumentsOfScenario.Add("nextPage", nextPage);
            argumentsOfScenario.Add("fullname", fullname);
            argumentsOfScenario.Add("postcode", postcode);
            argumentsOfScenario.Add("nextPage1", nextPage1);
            argumentsOfScenario.Add("nextPage2", nextPage2);
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Change postcode on what is your address page", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 49
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 50
 await testRunner.GivenAsync("that I navigate to the Pets application portal", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 51
 await testRunner.WhenAsync(string.Format("sign in with valid credentials with logininfo \'{0}\'", logininfo), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 52
 await testRunner.AndAsync("click on Welsh language", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 53
 await testRunner.ThenAsync(string.Format("verify next page \'{0}\' is loaded", nextPage), ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 54
 await testRunner.WhenAsync("click on Apply for a document", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 55
 await testRunner.AndAsync("select \'Nac ydyn\' on Personal Details page", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 56
 await testRunner.WhenAsync("click on continue", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 57
 await testRunner.WhenAsync(string.Format("enter your full name \'{0}\'", fullname), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 58
 await testRunner.AndAsync("click on continue", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 59
 await testRunner.WhenAsync(string.Format("enter your postcode \'{0}\'", postcode), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 60
 await testRunner.ThenAsync(string.Format("verify next page \'{0}\' is loaded", nextPage1), ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 61
 await testRunner.WhenAsync("click on change postcode", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 62
 await testRunner.ThenAsync(string.Format("verify next page \'{0}\' is loaded", nextPage2), ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify error message on select address page on Pets")]
        [NUnit.Framework.TestCaseAttribute("test", "Dogfennau teithio gydol oes i anifeiliaid anwes", "manylion chi", "ch enw llawn?", "ch cod post", "TestFullName", "SE1 7PB", "Dewiswch eich cyfeiriad o blith y rhestr", null)]
        public async global::System.Threading.Tasks.Task VerifyErrorMessageOnSelectAddressPageOnPets(string logininfo, string nextPage, string nextPage1, string nextPage2, string nextPage3, string fullname, string postcode, string errorMessage, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("logininfo", logininfo);
            argumentsOfScenario.Add("nextPage", nextPage);
            argumentsOfScenario.Add("nextPage1", nextPage1);
            argumentsOfScenario.Add("nextPage2", nextPage2);
            argumentsOfScenario.Add("nextPage3", nextPage3);
            argumentsOfScenario.Add("fullname", fullname);
            argumentsOfScenario.Add("postcode", postcode);
            argumentsOfScenario.Add("errorMessage", errorMessage);
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Verify error message on select address page on Pets", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 68
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 69
 await testRunner.GivenAsync("that I navigate to the Pets application portal", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 70
 await testRunner.WhenAsync(string.Format("sign in with valid credentials with logininfo \'{0}\'", logininfo), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 71
 await testRunner.AndAsync("click on Welsh language", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 72
 await testRunner.ThenAsync(string.Format("verify next page \'{0}\' is loaded", nextPage), ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 73
 await testRunner.WhenAsync("click on Apply for a document", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 74
 await testRunner.ThenAsync(string.Format("verify next page \'{0}\' is loaded", nextPage1), ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 75
 await testRunner.WhenAsync("select \'Nac ydyn\' on Personal Details page", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 76
 await testRunner.AndAsync("click on continue", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 77
 await testRunner.ThenAsync(string.Format("verify next page \'{0}\' is loaded", nextPage2), ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 78
 await testRunner.WhenAsync(string.Format("enter your full name \'{0}\'", fullname), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 79
 await testRunner.AndAsync("click on continue", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 80
 await testRunner.ThenAsync(string.Format("verify next page \'{0}\' is loaded", nextPage3), ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 81
 await testRunner.WhenAsync(string.Format("enter your postcode \'{0}\'", postcode), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 82
 await testRunner.AndAsync("click on continue", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 83
 await testRunner.ThenAsync(string.Format("verify error message \'{0}\' on Pets", errorMessage), ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify cannot find address link on select address page on Pets")]
        [NUnit.Framework.TestCaseAttribute("test", "Dogfennau teithio gydol oes i anifeiliaid anwes", "manylion chi", "ch enw llawn?", "ch cod post", "ch cyfeiriad?", "TestFullName", "SE1 7PB", null)]
        public async global::System.Threading.Tasks.Task VerifyCannotFindAddressLinkOnSelectAddressPageOnPets(string logininfo, string nextPage, string nextPage1, string nextPage2, string nextPage3, string nextPage4, string fullname, string postcode, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("logininfo", logininfo);
            argumentsOfScenario.Add("nextPage", nextPage);
            argumentsOfScenario.Add("nextPage1", nextPage1);
            argumentsOfScenario.Add("nextPage2", nextPage2);
            argumentsOfScenario.Add("nextPage3", nextPage3);
            argumentsOfScenario.Add("nextPage4", nextPage4);
            argumentsOfScenario.Add("fullname", fullname);
            argumentsOfScenario.Add("postcode", postcode);
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Verify cannot find address link on select address page on Pets", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 89
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 90
 await testRunner.GivenAsync("that I navigate to the Pets application portal", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 91
 await testRunner.WhenAsync(string.Format("sign in with valid credentials with logininfo \'{0}\'", logininfo), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 92
 await testRunner.AndAsync("click on Welsh language", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 93
 await testRunner.ThenAsync(string.Format("verify next page \'{0}\' is loaded", nextPage), ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 94
 await testRunner.WhenAsync("click on Apply for a document", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 95
 await testRunner.ThenAsync(string.Format("verify next page \'{0}\' is loaded", nextPage1), ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 96
 await testRunner.WhenAsync("select \'Nac ydyn\' on Personal Details page", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 97
 await testRunner.AndAsync("click on continue", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 98
 await testRunner.ThenAsync(string.Format("verify next page \'{0}\' is loaded", nextPage2), ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 99
 await testRunner.WhenAsync(string.Format("enter your full name \'{0}\'", fullname), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 100
 await testRunner.AndAsync("click on continue", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 101
 await testRunner.ThenAsync(string.Format("verify next page \'{0}\' is loaded", nextPage3), ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 102
 await testRunner.WhenAsync(string.Format("enter your postcode \'{0}\'", postcode), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 103
 await testRunner.AndAsync("click on I cannot find the address in the list", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 104
 await testRunner.ThenAsync(string.Format("verify next page \'{0}\' is loaded", nextPage4), ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
    }
}
#pragma warning restore
#endregion
